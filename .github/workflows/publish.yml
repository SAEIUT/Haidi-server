name: Run Docker Compose and test
on:
  push:
    branches:
      - 'docker'
      - 'dev-api'
      - 'Maintenance'
      - 'maintenance'
jobs:
  deploy:
    name: run docker compose
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
      ME_CONFIG_MONGODB_URL: ${{ secrets.ME_CONFIG_MONGODB_URL }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "ME_CONFIG_MONGODB_URL=${{ secrets.ME_CONFIG_MONGODB_URL }}" >> .env
      - name: Run Docker Compose
        working-directory: .
        run: |
          docker-compose up -d --build
      
      - name: Test Database
        working-directory: .
        run: |
          docker-compose run app npm test